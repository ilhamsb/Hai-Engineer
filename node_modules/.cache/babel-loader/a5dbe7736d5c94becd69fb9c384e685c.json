{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\BELAJAR\\\\BelajarGeh\\\\fe\\\\src\\\\component\\\\content\\\\mahasiswa\\\\editMahasiswa.js\";\nimport React from 'react';\nimport { Modal, ModalBody, ModalFooter, ModalHeader, Button } from 'reactstrap';\nimport axios from 'axios';\nimport apiconfig from '../../../config/api.config.json';\nimport Select from \"react-select\";\n\nclass Editmahasiswa extends React.Component {\n  constructor(props) {\n    super(props); // let userdata = JSON.parse(localStorage.getItem(apiConfig.LS.USERDATA))\n\n    this.handleChange1 = selectedOption => {\n      this.setState({\n        selectValue: selectedOption.value\n      });\n      let tmp = this.state.formdata;\n      tmp[\"kode_provinsi\"] = selectedOption.value;\n    };\n\n    this.handleChange2 = selectedOption => {\n      this.setState({\n        selectValue2: selectedOption.value\n      });\n      let tmp = this.state.formdata;\n      tmp[\"kode_kota\"] = selectedOption.value;\n    };\n\n    this.onAddingItem = i => event => {\n      this.setState((state, props) => {\n        this.props.productsList[i].isChecked = !this.props.productsList[i].isChecked;\n        return {\n          productsListNew: this.props.productsList\n        };\n      });\n    };\n\n    this.submitHandler = event => {\n      //    let kota = this.state.selectedOption2.value\n      //     let tmp = this.state.formdata\n      //     tmp.kd_kota = kota\n      //     let provinsi = this.state.selectedOption.value\n      //     tmp.kd_prov = provinsi\n      //     this.setState({\n      //        formdata : tmp\n      //        })\n      event.preventDefault();\n      event.target.className += \" was-validated\";\n      const isValid = this.validate();\n\n      if (isValid == false) {// alert(this.state.formdata.nameError)\n      } else {\n        //alert(JSON.stringify(this.state.formdata))\n        let selectedProductsArray = this.state.productsListNew.filter((product, i) => {\n          return product.isChecked;\n        });\n        let stringHobi = '';\n        let tmp = this.state.formdata;\n        selectedProductsArray.map(row => {\n          if (stringHobi !== '') {\n            stringHobi = stringHobi + ', ' + row.name;\n          } else {\n            stringHobi = row.name;\n          }\n        });\n        tmp['hobi'] = stringHobi;\n        this.setState({\n          formdata: tmp\n        });\n        let token = localStorage.getItem(apiconfig.LS.TOKEN);\n        let option = {\n          url: apiconfig.BASE_URL + apiconfig.ENDPOINTS.MAHASISWA,\n          method: \"put\",\n          headers: {\n            \"authorization\": token,\n            \"Content-type\": \"application/json\"\n          },\n          data: this.state.formdata\n        };\n        axios(option).then(Response => {\n          if (Response.data.code == 200) {\n            alert('Succes');\n            this.props.modalStatus();\n          } else {\n            alert(Response.data.message);\n          }\n        }).catch(error => {\n          console.log(error);\n        });\n      }\n    };\n\n    this.state = {\n      formdata: {\n        kode_mahasiswa: '',\n        nama_mahasiswa: '',\n        alamat: '',\n        kode_agama: '',\n        kd_jurusan: '',\n        jenis_kelamin: '',\n        hobi: '',\n        kode_kota: '' //update_by:userdata.username\n\n      },\n      provinsi: [],\n      kota: [],\n      listKota: [],\n      listProvinsi: [],\n      selectedOption: {},\n      selectedOption2: {},\n      selectValue: '',\n      selectValue2: '',\n      productsListNew: []\n    };\n    this.submitHandler = this.submitHandler.bind(this);\n    this.changeHandler = this.changeHandler.bind(this);\n    this.handleChange1 = this.handleChange1.bind(this);\n    this.handleChange2 = this.handleChange2.bind(this);\n  }\n\n  validate() {\n    let nameError = \"\";\n\n    if (!this.state.formdata.kode_mahasiswa || !this.state.formdata.nama_mahasiswa || !this.state.formdata.alamat || !this.state.formdata.jenis_kelamin || !this.state.formdata.kode_agama || !this.state.formdata.kode_jurusan) {\n      nameError = \"Semua field Harus Diisi\";\n    }\n\n    if (nameError) {\n      this.state.formdata.nameError = nameError;\n      return false;\n    }\n\n    return true;\n  }\n\n  getProvinsi() {\n    let token = localStorage.getItem(apiconfig.LS.TOKEN);\n    let option = {\n      url: apiconfig.BASE_URL + apiconfig.ENDPOINTS.PROVINSI,\n      method: \"get\",\n      headers: {\n        \"authorization\": token\n      }\n    };\n    axios(option).then(response => {\n      let tmp = [];\n      response.data.message.map(row => {\n        tmp.push({\n          value: row.kode_provinsi,\n          label: row.nama_provinsi\n        });\n      });\n      this.setState({\n        listProvinsi: tmp,\n        provinsi: response.data.message\n      });\n    }).catch(error => {\n      alert(error);\n    });\n  }\n\n  getKota() {\n    let token = localStorage.getItem(apiconfig.LS.TOKEN);\n    let option = {\n      url: apiconfig.BASE_URL + apiconfig.ENDPOINTS.KOTA,\n      method: \"get\",\n      headers: {\n        \"authorization\": token\n      }\n    };\n    axios(option).then(response => {\n      let tmp = [];\n      response.data.message.map(row => {\n        tmp.push({\n          value: row.kode_kota,\n          label: row.nama_kota,\n          link: row.kode_provinsi\n        });\n      });\n      this.setState({\n        listKota: tmp,\n        kota: response.data.message\n      });\n    }).catch(error => {\n      alert(error);\n    });\n  }\n\n  componentDidMount() {\n    this.getProvinsi();\n    this.getKota();\n  }\n\n  componentWillReceiveProps(newprops) {\n    this.setState({\n      formdata: newprops.listmahasiswa,\n      productsListNew: newprops.productsList,\n      selectValue: this.props.listmahasiswa.kode_provinsi,\n      selectValue2: this.props.listmahasiswa.kode_kota\n    });\n  }\n\n  changeHandler(e) {\n    let tmp = this.state.formdata;\n    tmp[e.target.name] = e.target.value;\n    this.setState({\n      formdata: tmp\n    });\n  }\n\n  render() {\n    const options1 = this.state.listProvinsi;\n    const options2 = this.state.listKota;\n    const filteredOptions = options2.filter(o => o.link === this.state.selectValue);\n    return React.createElement(Modal, {\n      isOpen: this.props.edit,\n      className: this.props.className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      role: \"form\",\n      className: \"needs-validation\",\n      onSubmit: this.submitHandler,\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, \"Edit Mahasiswa \"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, \" Kode Mahasiswa : \"), React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      readOnly: true,\n      name: \"kode_mahasiswa\",\n      value: this.props.listmahasiswa.kode_mahasiswa,\n      onChange: this.changeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, \" Nama Mahasiwa : \"), React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      placeholder: \"Type Unit Name\",\n      name: \"nm_mhs\",\n      value: this.props.listmahasiswa.nama_mahasiswa,\n      onChange: this.changeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, \" Alamat : \"), React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      placeholder: \"alamat\",\n      name: \"alamat\",\n      value: this.props.listmahasiswa.alamat,\n      onChange: this.changeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      for: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, \" Provinsi : \"), React.createElement(Select, {\n      type: \"text\",\n      class: \"form-control\",\n      placeholder: \"Type address\",\n      name: \"nama_provinsi\",\n      value: options1.filter(({\n        value\n      }) => value === this.props.listmahasiswa.kode_provinsi),\n      onChange: this.handleChange1,\n      options: options1 //onChange={this.changeHandler}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      for: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, \" Kota : \"), React.createElement(Select, {\n      type: \"text\",\n      class: \"form-control\",\n      placeholder: \"Type address\",\n      name: \"kode_kota\",\n      value: options2.filter(({\n        value\n      }) => value === this.props.listmahasiswa.kode_kota) //onChange={this.changeHandler}\n      ,\n      onChange: this.handleChange2,\n      options: filteredOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, \" Kode Agama : \"), React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      placeholder: \"Kode Agama\",\n      name: \"kode_agama\",\n      value: this.props.listmahasiswa.kode_agama,\n      onChange: this.changeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, \" Kode jurusan : \"), React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      placeholder: \"Kode Jurusan\",\n      name: \"kode_jurusan\",\n      value: this.props.listmahasiswa.kode_jurusan,\n      onChange: this.changeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"kode jurusan\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, \"Jenis Kelamin\")), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"custom-control custom-radio custom-control-inline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      id: \"jenis_kelamin1\",\n      name: \"jenis_kelamin\",\n      value: \"Laki-laki\",\n      checked: this.props.listmahasiswa.jenis_kelamin === 'Laki-laki',\n      onChange: this.changeHandler,\n      class: \"custom-control-input\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      class: \"custom-control-label\",\n      for: \"jenis_kelamin1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, \"Laki-laki\")), React.createElement(\"div\", {\n      class: \"custom-control custom-radio custom-control-inline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      id: \"jenis_kelamin2\",\n      name: \"jenis_kelamin\",\n      value: \"Perempuan\",\n      checked: this.props.listmahasiswa.jenis_kelamin === 'Perempuan',\n      onChange: this.changeHandler,\n      class: \"custom-control-input\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      class: \"custom-control-label\",\n      for: \"jenis_kelamin2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, \"Perempuan\"))), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, \" Hobi : \"), React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, this.props.productsList.map((product, i) => {\n      return React.createElement(\"tr\", {\n        key: i + 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }, i + 1), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }, product.name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"checkbox checkbox-circle checkbox-color-scheme\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        class: \"checkbox-checked\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        value: product.name,\n        checked: product.isChecked,\n        onChange: this.onAddingItem(i),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      })))));\n    }))))), React.createElement(ModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, \"Save\"), React.createElement(Button, {\n      color: \"danger\",\n      onClick: this.props.modalStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, \"Cancel\"))));\n  }\n\n}\n\nexport default Editmahasiswa;","map":{"version":3,"sources":["C:/Users/USER/Documents/BELAJAR/BelajarGeh/fe/src/component/content/mahasiswa/editMahasiswa.js"],"names":["React","Modal","ModalBody","ModalFooter","ModalHeader","Button","axios","apiconfig","Select","Editmahasiswa","Component","constructor","props","handleChange1","selectedOption","setState","selectValue","value","tmp","state","formdata","handleChange2","selectValue2","onAddingItem","i","event","productsList","isChecked","productsListNew","submitHandler","preventDefault","target","className","isValid","validate","selectedProductsArray","filter","product","stringHobi","map","row","name","token","localStorage","getItem","LS","TOKEN","option","url","BASE_URL","ENDPOINTS","MAHASISWA","method","headers","data","then","Response","code","alert","modalStatus","message","catch","error","console","log","kode_mahasiswa","nama_mahasiswa","alamat","kode_agama","kd_jurusan","jenis_kelamin","hobi","kode_kota","provinsi","kota","listKota","listProvinsi","selectedOption2","bind","changeHandler","nameError","kode_jurusan","getProvinsi","PROVINSI","response","push","kode_provinsi","label","nama_provinsi","getKota","KOTA","nama_kota","link","componentDidMount","componentWillReceiveProps","newprops","listmahasiswa","e","render","options1","options2","filteredOptions","o","edit"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAcC,SAAd,EAAwBC,WAAxB,EAAoCC,WAApC,EAAgDC,MAAhD,QAA6D,YAA7D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,OAAOC,MAAP,MAAmB,cAAnB;;AAGA,MAAMC,aAAN,SAA4BT,KAAK,CAACU,SAAlC,CAA4C;AACxCC,EAAAA,WAAW,CAAEC,KAAF,EAAQ;AACf,UAAMA,KAAN,EADe,CAEhB;;AAFgB,SA2CnBC,aA3CmB,GA2CFC,cAAD,IAAoB;AAChC,WAAKC,QAAL,CAAc;AAACC,QAAAA,WAAW,EAAEF,cAAc,CAACG;AAA7B,OAAd;AACA,UAAIC,GAAG,GAAG,KAAKC,KAAL,CAAWC,QAArB;AACAF,MAAAA,GAAG,CAAC,eAAD,CAAH,GAAuBJ,cAAc,CAACG,KAAtC;AACD,KA/CgB;;AAAA,SAkDnBI,aAlDmB,GAkDFP,cAAD,IAAoB;AAChC,WAAKC,QAAL,CAAc;AAACO,QAAAA,YAAY,EAAER,cAAc,CAACG;AAA9B,OAAd;AACA,UAAIC,GAAG,GAAI,KAAKC,KAAL,CAAWC,QAAtB;AACAF,MAAAA,GAAG,CAAC,WAAD,CAAH,GAAmBJ,cAAc,CAACG,KAAlC;AAED,KAvDgB;;AAAA,SAkInBM,YAlImB,GAkIHC,CAAD,IAAQC,KAAD,IAAW;AAC/B,WAAKV,QAAL,CAAc,CAACI,KAAD,EAAQP,KAAR,KAAkB;AAC5B,aAAKA,KAAL,CAAWc,YAAX,CAAwBF,CAAxB,EAA2BG,SAA3B,GAAuC,CAAC,KAAKf,KAAL,CAAWc,YAAX,CAAwBF,CAAxB,EAA2BG,SAAnE;AACF,eAAO;AACLC,UAAAA,eAAe,EAAG,KAAKhB,KAAL,CAAWc;AADxB,SAAP;AAGD,OALD;AAMD,KAzIkB;;AAAA,SAoJnBG,aApJmB,GAoJJJ,KAAK,IAAG;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEA,MAAAA,KAAK,CAACK,cAAN;AACAL,MAAAA,KAAK,CAACM,MAAN,CAAaC,SAAb,IAA0B,gBAA1B;AACA,YAAMC,OAAO,GAAG,KAAKC,QAAL,EAAhB;;AAEI,UAAID,OAAO,IAAI,KAAf,EAAqB,CACnB;AAED,OAHD,MAGK;AACP;AACA,YAAIE,qBAAqB,GAAG,KAAKhB,KAAL,CAAWS,eAAX,CAA2BQ,MAA3B,CAAkC,CAACC,OAAD,EAAUb,CAAV,KAAc;AAC1E,iBAAOa,OAAO,CAACV,SAAf;AAAyB,SADC,CAA5B;AAEA,YAAIW,UAAU,GAAG,EAAjB;AACA,YAAIpB,GAAG,GAAG,KAAKC,KAAL,CAAWC,QAArB;AACAe,QAAAA,qBAAqB,CAACI,GAAtB,CAA2BC,GAAD,IAAS;AACjC,cAAIF,UAAU,KAAK,EAAnB,EAAuB;AACnBA,YAAAA,UAAU,GAAGA,UAAU,GAAE,IAAZ,GAAmBE,GAAG,CAACC,IAApC;AACH,WAFD,MAEO;AACHH,YAAAA,UAAU,GAAGE,GAAG,CAACC,IAAjB;AACH;AACJ,SANC;AAQFvB,QAAAA,GAAG,CAAC,MAAD,CAAH,GAAcoB,UAAd;AACA,aAAKvB,QAAL,CAAc;AACZK,UAAAA,QAAQ,EAAGF;AADC,SAAd;AAGE,YAAIwB,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqBrC,SAAS,CAACsC,EAAV,CAAaC,KAAlC,CAAZ;AACA,YAAIC,MAAM,GAAG;AACTC,UAAAA,GAAG,EAAGzC,SAAS,CAAC0C,QAAV,GAAmB1C,SAAS,CAAC2C,SAAV,CAAoBC,SADpC;AAETC,UAAAA,MAAM,EAAG,KAFA;AAGTC,UAAAA,OAAO,EAAC;AACJ,6BAAkBX,KADd;AAEJ,4BAAgB;AAFZ,WAHC;AAOTY,UAAAA,IAAI,EAAE,KAAKnC,KAAL,CAAWC;AAPR,SAAb;AASAd,QAAAA,KAAK,CAACyC,MAAD,CAAL,CACCQ,IADD,CACOC,QAAD,IAAa;AACf,cAAGA,QAAQ,CAACF,IAAT,CAAcG,IAAd,IAAsB,GAAzB,EAA6B;AACzBC,YAAAA,KAAK,CAAC,QAAD,CAAL;AACA,iBAAK9C,KAAL,CAAW+C,WAAX;AACH,WAHD,MAGK;AACDD,YAAAA,KAAK,CAACF,QAAQ,CAACF,IAAT,CAAcM,OAAf,CAAL;AACH;AACJ,SARD,EASCC,KATD,CASQC,KAAD,IAAU;AACbC,UAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,SAXD;AAYD;AACF,KA7MkB;;AAGf,SAAK3C,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAG;AACP6C,QAAAA,cAAc,EAAC,EADR;AAEPC,QAAAA,cAAc,EAAC,EAFR;AAGPC,QAAAA,MAAM,EAAC,EAHA;AAIPC,QAAAA,UAAU,EAAC,EAJJ;AAKPC,QAAAA,UAAU,EAAC,EALJ;AAMPC,QAAAA,aAAa,EAAC,EANP;AAOPC,QAAAA,IAAI,EAAC,EAPE;AAQPC,QAAAA,SAAS,EAAE,EARJ,CASP;;AATO,OADF;AAYTC,MAAAA,QAAQ,EAAE,EAZD;AAaTC,MAAAA,IAAI,EAAE,EAbG;AAcTC,MAAAA,QAAQ,EAAE,EAdD;AAeTC,MAAAA,YAAY,EAAE,EAfL;AAgBT9D,MAAAA,cAAc,EAAC,EAhBN;AAiBT+D,MAAAA,eAAe,EAAC,EAjBP;AAkBT7D,MAAAA,WAAW,EAAC,EAlBH;AAmBTM,MAAAA,YAAY,EAAC,EAnBJ;AAoBTM,MAAAA,eAAe,EAAG;AApBT,KAAb;AAuBA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBiD,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBD,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKjE,aAAL,GAAqB,KAAKA,aAAL,CAAmBiE,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKzD,aAAL,GAAqB,KAAKA,aAAL,CAAmByD,IAAnB,CAAwB,IAAxB,CAArB;AACH;;AACD5C,EAAAA,QAAQ,GAAE;AACR,QAAI8C,SAAS,GAAE,EAAf;;AACI,QAAI,CAAC,KAAK7D,KAAL,CAAWC,QAAX,CAAoB6C,cAArB,IAAuC,CAAC,KAAK9C,KAAL,CAAWC,QAAX,CAAoB8C,cAA5D,IAA4E,CAAC,KAAK/C,KAAL,CAAWC,QAAX,CAAoB+C,MAAjG,IAAyG,CAAC,KAAKhD,KAAL,CAAWC,QAAX,CAAoBkD,aAA9H,IAA6I,CAAC,KAAKnD,KAAL,CAAWC,QAAX,CAAoBgD,UAAlK,IAA8K,CAAC,KAAKjD,KAAL,CAAWC,QAAX,CAAoB6D,YAAvM,EAAoN;AACpND,MAAAA,SAAS,GAAG,yBAAZ;AACH;;AACD,QAAIA,SAAJ,EAAc;AACZ,WAAK7D,KAAL,CAAWC,QAAX,CAAoB4D,SAApB,GAAgCA,SAAhC;AACA,aAAO,KAAP;AACD;;AACD,WAAO,IAAP;AACD;;AAgBDE,EAAAA,WAAW,GAAG;AACV,QAAIxC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqBrC,SAAS,CAACsC,EAAV,CAAaC,KAAlC,CAAZ;AACA,QAAIC,MAAM,GAAG;AACXC,MAAAA,GAAG,EAAEzC,SAAS,CAAC0C,QAAV,GAAqB1C,SAAS,CAAC2C,SAAV,CAAoBiC,QADnC;AAEX/B,MAAAA,MAAM,EAAE,KAFG;AAGXC,MAAAA,OAAO,EAAE;AACP,yBAAiBX;AADV;AAHE,KAAb;AAOJpC,IAAAA,KAAK,CAACyC,MAAD,CAAL,CACOQ,IADP,CACY6B,QAAQ,IAAI;AAChB,UAAIlE,GAAG,GAAG,EAAV;AAEAkE,MAAAA,QAAQ,CAAC9B,IAAT,CAAcM,OAAd,CAAsBrB,GAAtB,CAA0BC,GAAG,IAAI;AAC/BtB,QAAAA,GAAG,CAACmE,IAAJ,CAAS;AACPpE,UAAAA,KAAK,EAAEuB,GAAG,CAAC8C,aADJ;AAEPC,UAAAA,KAAK,EAAE/C,GAAG,CAACgD;AAFJ,SAAT;AAID,OALD;AAMA,WAAKzE,QAAL,CAAc;AACZ6D,QAAAA,YAAY,EAAE1D,GADF;AAEZuD,QAAAA,QAAQ,EAAEW,QAAQ,CAAC9B,IAAT,CAAcM;AAFZ,OAAd;AAID,KAdP,EAeOC,KAfP,CAeaC,KAAK,IAAI;AACdJ,MAAAA,KAAK,CAACI,KAAD,CAAL;AACD,KAjBP;AAkBG;;AAEH2B,EAAAA,OAAO,GAAG;AACN,QAAI/C,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqBrC,SAAS,CAACsC,EAAV,CAAaC,KAAlC,CAAZ;AACA,QAAIC,MAAM,GAAG;AACXC,MAAAA,GAAG,EAAEzC,SAAS,CAAC0C,QAAV,GAAqB1C,SAAS,CAAC2C,SAAV,CAAoBwC,IADnC;AAEXtC,MAAAA,MAAM,EAAE,KAFG;AAGXC,MAAAA,OAAO,EAAE;AACP,yBAAiBX;AADV;AAHE,KAAb;AAOApC,IAAAA,KAAK,CAACyC,MAAD,CAAL,CACGQ,IADH,CACQ6B,QAAQ,IAAI;AAChB,UAAIlE,GAAG,GAAG,EAAV;AAEAkE,MAAAA,QAAQ,CAAC9B,IAAT,CAAcM,OAAd,CAAsBrB,GAAtB,CAA0BC,GAAG,IAAI;AAC/BtB,QAAAA,GAAG,CAACmE,IAAJ,CAAS;AACPpE,UAAAA,KAAK,EAAEuB,GAAG,CAACgC,SADJ;AAEPe,UAAAA,KAAK,EAAE/C,GAAG,CAACmD,SAFJ;AAGPC,UAAAA,IAAI,EAAGpD,GAAG,CAAC8C;AAHJ,SAAT;AAKD,OAND;AAOA,WAAKvE,QAAL,CAAc;AACZ4D,QAAAA,QAAQ,EAAEzD,GADE;AAEZwD,QAAAA,IAAI,EAAEU,QAAQ,CAAC9B,IAAT,CAAcM;AAFR,OAAd;AAKD,KAhBH,EAiBGC,KAjBH,CAiBSC,KAAK,IAAI;AACdJ,MAAAA,KAAK,CAACI,KAAD,CAAL;AACD,KAnBH;AAoBD;;AAEH+B,EAAAA,iBAAiB,GAAG;AAChB,SAAKX,WAAL;AACA,SAAKO,OAAL;AACD;;AAEHK,EAAAA,yBAAyB,CAACC,QAAD,EAAW;AAChC,SAAKhF,QAAL,CAAc;AACVK,MAAAA,QAAQ,EAAG2E,QAAQ,CAACC,aADV;AAEVpE,MAAAA,eAAe,EAAGmE,QAAQ,CAACrE,YAFjB;AAGVV,MAAAA,WAAW,EAAE,KAAKJ,KAAL,CAAWoF,aAAX,CAAyBV,aAH5B;AAIVhE,MAAAA,YAAY,EAAE,KAAKV,KAAL,CAAWoF,aAAX,CAAyBxB;AAJ7B,KAAd;AAMH;;AAWDO,EAAAA,aAAa,CAACkB,CAAD,EAAI;AACb,QAAI/E,GAAG,GAAG,KAAKC,KAAL,CAAWC,QAArB;AACAF,IAAAA,GAAG,CAAC+E,CAAC,CAAClE,MAAF,CAASU,IAAV,CAAH,GAAqBwD,CAAC,CAAClE,MAAF,CAASd,KAA9B;AACA,SAAKF,QAAL,CAAc;AACVK,MAAAA,QAAQ,EAACF;AADC,KAAd;AAGH;;AA4DDgF,EAAAA,MAAM,GAAE;AACJ,UAAMC,QAAQ,GAAG,KAAKhF,KAAL,CAAWyD,YAA5B;AACA,UAAMwB,QAAQ,GAAE,KAAKjF,KAAL,CAAWwD,QAA3B;AAEA,UAAM0B,eAAe,GAAGD,QAAQ,CAAChE,MAAT,CACxBkE,CAAC,IAAIA,CAAC,CAACV,IAAF,KAAW,KAAKzE,KAAL,CAAWH,WADH,CAAxB;AAEA,WACG,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAI,KAAKJ,KAAL,CAAW2F,IAA5B;AAAkC,MAAA,SAAS,EAAE,KAAK3F,KAAL,CAAWoB,SAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,IAAI,EAAG,MAAb;AAAoB,MAAA,SAAS,EAAC,kBAA9B;AAAiD,MAAA,QAAQ,EAAE,KAAKH,aAAhE;AAA+E,MAAA,UAAU,MAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADH,EAEG,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAK,MAAA,KAAK,EAAE,YAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,GAAG,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAC,cAAzB;AAAwC,MAAA,QAAQ,MAAhD;AACA,MAAA,IAAI,EAAC,gBADL;AAEA,MAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWoF,aAAX,CAAyB/B,cAFhC;AAGA,MAAA,QAAQ,EAAE,KAAKc,aAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAFJ,EAUI;AAAK,MAAA,KAAK,EAAE,YAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,GAAG,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,EAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAC,cAAzB;AAAwC,MAAA,WAAW,EAAC,gBAApD;AACA,MAAA,IAAI,EAAC,QADL;AAEA,MAAA,KAAK,EAAE,KAAKnE,KAAL,CAAWoF,aAAX,CAAyB9B,cAFhC;AAGA,MAAA,QAAQ,EAAE,KAAKa,aAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAVJ,EAmBI;AAAK,MAAA,KAAK,EAAE,YAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAO,MAAA,GAAG,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,EAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAC,cAAzB;AAAwC,MAAA,WAAW,EAAC,QAApD;AACA,MAAA,IAAI,EAAC,QADL;AAEA,MAAA,KAAK,EAAE,KAAKnE,KAAL,CAAWoF,aAAX,CAAyB7B,MAFhC;AAGA,MAAA,QAAQ,EAAE,KAAKY,aAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAnBJ,EA4BI;AAAO,MAAA,GAAG,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBA5BJ,EA6BQ,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,MAAb;AAAoB,MAAA,KAAK,EAAC,cAA1B;AAAyC,MAAA,WAAW,EAAC,cAArD;AACA,MAAA,IAAI,EAAC,eADL;AAEA,MAAA,KAAK,EAAEoB,QAAQ,CAAC/D,MAAT,CAAgB,CAAC;AAACnB,QAAAA;AAAD,OAAD,KAAaA,KAAK,KAAK,KAAKL,KAAL,CAAWoF,aAAX,CAAyBV,aAAhE,CAFP;AAGA,MAAA,QAAQ,EAAE,KAAKzE,aAHf;AAIA,MAAA,OAAO,EAAEsF,QAJT,CAKA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA7BR,EAsCI;AAAO,MAAA,GAAG,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAtCJ,EAuCQ,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,MAAb;AAAoB,MAAA,KAAK,EAAC,cAA1B;AAAyC,MAAA,WAAW,EAAC,cAArD;AACA,MAAA,IAAI,EAAC,WADL;AAEA,MAAA,KAAK,EAAEC,QAAQ,CAAChE,MAAT,CAAgB,CAAC;AAACnB,QAAAA;AAAD,OAAD,KAAaA,KAAK,KAAK,KAAKL,KAAL,CAAWoF,aAAX,CAAyBxB,SAAhE,CAFP,CAGA;AAHA;AAIA,MAAA,QAAQ,EAAE,KAAKnD,aAJf;AAKA,MAAA,OAAO,EAAEgF,eALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvCR,EAgDI;AAAK,MAAA,KAAK,EAAE,YAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAO,MAAA,GAAG,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADA,EAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAC,cAAzB;AAAwC,MAAA,WAAW,EAAC,YAApD;AACA,MAAA,IAAI,EAAC,YADL;AAEA,MAAA,KAAK,EAAE,KAAKzF,KAAL,CAAWoF,aAAX,CAAyB5B,UAFhC;AAGA,MAAA,QAAQ,EAAE,KAAKW,aAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAhDJ,EAyDI;AAAK,MAAA,KAAK,EAAE,YAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAO,MAAA,GAAG,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADA,EAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAC,cAAzB;AAAwC,MAAA,WAAW,EAAC,cAApD;AACA,MAAA,IAAI,EAAC,cADL;AAEA,MAAA,KAAK,EAAE,KAAKnE,KAAL,CAAWoF,aAAX,CAAyBf,YAFhC;AAGA,MAAA,QAAQ,EAAE,KAAKF,aAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAzDJ,EAkEQ;AAAK,MAAA,KAAK,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACZ;AAAO,MAAA,GAAG,EAAC,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADY,CAlER,EAsEI;AAAK,MAAA,KAAK,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,KAAK,EAAC,mDAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,EAAE,EAAC,gBAAvB;AAAwC,MAAA,IAAI,EAAG,eAA/C;AACA,MAAA,KAAK,EAAC,WADN;AAEA,MAAA,OAAO,EAAE,KAAKnE,KAAL,CAAWoF,aAAX,CAAyB1B,aAAzB,KAA2C,WAFpD;AAGA,MAAA,QAAQ,EAAE,KAAKS,aAHf;AAIA,MAAA,KAAK,EAAC,sBAJN;AAI6B,MAAA,QAAQ,MAJrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAMI;AAAO,MAAA,KAAK,EAAC,sBAAb;AAAoC,MAAA,GAAG,EAAE,gBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBANJ,CADJ,EAUQ;AAAK,MAAA,KAAK,EAAC,mDAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,EAAE,EAAC,gBAAvB;AAAwC,MAAA,IAAI,EAAG,eAA/C;AACA,MAAA,KAAK,EAAC,WADN;AAEA,MAAA,OAAO,EAAE,KAAKnE,KAAL,CAAWoF,aAAX,CAAyB1B,aAAzB,KAA2C,WAFpD;AAGA,MAAA,QAAQ,EAAE,KAAKS,aAHf;AAIA,MAAA,KAAK,EAAC,sBAJN;AAI6B,MAAA,QAAQ,MAJrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAMA;AAAO,MAAA,KAAK,EAAC,sBAAb;AAAoC,MAAA,GAAG,EAAE,gBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBANA,CAVR,CAtEJ,EA2FU;AAAK,MAAA,KAAK,EAAE,YAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,GAAG,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM,KAAKnE,KAAL,CAAWc,YAAX,CAAwBa,GAAxB,CAA4B,CAACF,OAAD,EAAUb,CAAV,KAAe;AACzC,aACI;AAAI,QAAA,GAAG,EAAEA,CAAC,GAAC,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKA,CAAC,GAAC,CAAP,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKa,OAAO,CAACI,IAAb,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,KAAK,EAAC,gDAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,KAAK,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,IAAI,EAAC,UAAZ;AACI,QAAA,KAAK,EAAEJ,OAAO,CAACI,IADnB;AAEI,QAAA,OAAO,EAAEJ,OAAO,CAACV,SAFrB;AAGI,QAAA,QAAQ,EAAE,KAAKJ,YAAL,CAAkBC,CAAlB,CAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CADJ,CAHJ,CADJ;AAiBH,KAlBC,CADN,CADJ,CAHF,CA3FV,CAFH,EA8HG,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAwB,MAAA,IAAI,EAAC,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,QAAd;AAAuB,MAAA,OAAO,EAAE,KAAKZ,KAAL,CAAW+C,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,CA9HH,CADF,CADH;AAyIH;;AA9VuC;;AAgW5C,eAAelD,aAAf","sourcesContent":["import React from 'react'\r\nimport {Modal,ModalBody,ModalFooter,ModalHeader,Button} from 'reactstrap'\r\nimport axios from 'axios'\r\nimport apiconfig from '../../../config/api.config.json'\r\nimport Select from \"react-select\";\r\n\r\n\r\nclass Editmahasiswa extends React.Component {\r\n    constructor (props){\r\n        super(props)\r\n       // let userdata = JSON.parse(localStorage.getItem(apiConfig.LS.USERDATA))\r\n        this.state = {\r\n            formdata : {\r\n                kode_mahasiswa:'',\r\n                nama_mahasiswa:'',\r\n                alamat:'',\r\n                kode_agama:'',\r\n                kd_jurusan:'',\r\n                jenis_kelamin:'',\r\n                hobi:'',\r\n                kode_kota: ''\r\n                //update_by:userdata.username\r\n            },\r\n            provinsi: [],\r\n            kota: [],\r\n            listKota: [],\r\n            listProvinsi: [],\r\n            selectedOption:{},\r\n            selectedOption2:{},\r\n            selectValue:'',\r\n            selectValue2:'',\r\n            productsListNew : []\r\n          \r\n        }\r\n        this.submitHandler = this.submitHandler.bind(this)\r\n        this.changeHandler = this.changeHandler.bind(this)\r\n        this.handleChange1 = this.handleChange1.bind(this)\r\n        this.handleChange2 = this.handleChange2.bind(this)\r\n    }\r\n    validate(){\r\n      let nameError =\"\"\r\n          if (!this.state.formdata.kode_mahasiswa || !this.state.formdata.nama_mahasiswa||!this.state.formdata.alamat||!this.state.formdata.jenis_kelamin||!this.state.formdata.kode_agama||!this.state.formdata.kode_jurusan){\r\n          nameError = \"Semua field Harus Diisi\"\r\n      } \r\n      if (nameError){\r\n        this.state.formdata.nameError = nameError\r\n        return false\r\n      }\r\n      return true\r\n    }\r\n\r\n    handleChange1 = (selectedOption) => {\r\n        this.setState({selectValue: selectedOption.value});\r\n        let tmp = this.state.formdata\r\n        tmp[\"kode_provinsi\"] = selectedOption.value\r\n      };\r\n      \r\n    \r\n    handleChange2 = (selectedOption) => {\r\n        this.setState({selectValue2: selectedOption.value})\r\n        let tmp =  this.state.formdata\r\n        tmp[\"kode_kota\"] = selectedOption.value\r\n\r\n      }\r\n    \r\n    getProvinsi() {\r\n        let token = localStorage.getItem(apiconfig.LS.TOKEN);\r\n        let option = {\r\n          url: apiconfig.BASE_URL + apiconfig.ENDPOINTS.PROVINSI,\r\n          method: \"get\",\r\n          headers: {\r\n            \"authorization\": token\r\n          }\r\n        };\r\n    axios(option)\r\n          .then(response => {\r\n            let tmp = [];\r\n    \r\n            response.data.message.map(row => {\r\n              tmp.push({\r\n                value: row.kode_provinsi,\r\n                label: row.nama_provinsi\r\n              });\r\n            });\r\n            this.setState({\r\n              listProvinsi: tmp,\r\n              provinsi: response.data.message\r\n            });\r\n          })\r\n          .catch(error => {\r\n            alert(error);\r\n          });\r\n      }\r\n    \r\n    getKota() {\r\n        let token = localStorage.getItem(apiconfig.LS.TOKEN);\r\n        let option = {\r\n          url: apiconfig.BASE_URL + apiconfig.ENDPOINTS.KOTA,\r\n          method: \"get\",\r\n          headers: {\r\n            \"authorization\": token\r\n          }\r\n        };\r\n        axios(option)\r\n          .then(response => {\r\n            let tmp = [];\r\n    \r\n            response.data.message.map(row => {\r\n              tmp.push({\r\n                value: row.kode_kota,\r\n                label: row.nama_kota,\r\n                link : row.kode_provinsi\r\n              });\r\n            });\r\n            this.setState({\r\n              listKota: tmp,\r\n              kota: response.data.message\r\n            });\r\n           \r\n          })\r\n          .catch(error => {\r\n            alert(error);\r\n          });\r\n      }\r\n    \r\n    componentDidMount() {\r\n        this.getProvinsi();\r\n        this.getKota();\r\n      }\r\n\r\n    componentWillReceiveProps(newprops) {\r\n        this.setState({\r\n            formdata : newprops.listmahasiswa,\r\n            productsListNew : newprops.productsList,\r\n            selectValue: this.props.listmahasiswa.kode_provinsi,\r\n            selectValue2: this.props.listmahasiswa.kode_kota\r\n        })\r\n    }\r\n    onAddingItem = (i) => (event) => {\r\n      this.setState((state, props) => {\r\n          this.props.productsList[i].isChecked = !this.props.productsList[i].isChecked;\r\n        return {\r\n          productsListNew : this.props.productsList\r\n        }\r\n      })\r\n    }\r\n\r\n\r\n    changeHandler(e) {\r\n        let tmp = this.state.formdata\r\n        tmp[e.target.name] = e.target.value\r\n        this.setState({\r\n            formdata:tmp\r\n        })\r\n    }\r\n\r\n    submitHandler= event =>{\r\n    //    let kota = this.state.selectedOption2.value\r\n    //     let tmp = this.state.formdata\r\n    //     tmp.kd_kota = kota\r\n    //     let provinsi = this.state.selectedOption.value\r\n    //     tmp.kd_prov = provinsi\r\n    //     this.setState({\r\n    //        formdata : tmp\r\n    //        })\r\n      event.preventDefault();\r\n      event.target.className += \" was-validated\";\r\n      const isValid = this.validate()\r\n      \r\n          if (isValid == false){\r\n            // alert(this.state.formdata.nameError)\r\n\r\n          }else{ \r\n        //alert(JSON.stringify(this.state.formdata))\r\n        let selectedProductsArray = this.state.productsListNew.filter((product, i)=>{\r\n          return product.isChecked});\r\n        let stringHobi = ''\r\n        let tmp = this.state.formdata\r\n        selectedProductsArray.map((row) => {\r\n          if (stringHobi !== '') {\r\n              stringHobi = stringHobi +', ' + row.name\r\n          } else {\r\n              stringHobi = row.name\r\n          }\r\n      })\r\n\r\n      tmp['hobi'] = stringHobi\r\n      this.setState({\r\n        formdata : tmp\r\n    })\r\n        let token = localStorage.getItem(apiconfig.LS.TOKEN)\r\n        let option = {\r\n            url : apiconfig.BASE_URL+apiconfig.ENDPOINTS.MAHASISWA,\r\n            method : \"put\",\r\n            headers:{\r\n                \"authorization\" : token,\r\n                \"Content-type\": \"application/json\"\r\n            },\r\n            data: this.state.formdata\r\n        }\r\n        axios(option)\r\n        .then((Response)=> {\r\n            if(Response.data.code == 200){\r\n                alert('Succes')\r\n                this.props.modalStatus()\r\n            }else{\r\n                alert(Response.data.message)\r\n            }\r\n        })\r\n        .catch((error) =>{\r\n            console.log(error);\r\n        })\r\n      }\r\n    }\r\n    render(){\r\n        const options1 = this.state.listProvinsi;\r\n        const options2 =this.state.listKota;\r\n\r\n        const filteredOptions = options2.filter(\r\n        o => o.link === this.state.selectValue)\r\n        return(\r\n           <Modal isOpen = {this.props.edit} className={this.props.className}>\r\n             <form role = \"form\" className=\"needs-validation\" onSubmit={this.submitHandler} noValidate>\r\n                <ModalHeader>Edit Mahasiswa </ModalHeader>\r\n                <ModalBody>\r\n                {/* <form role = \"form\"> */}\r\n                    <div class =\"form-group\">\r\n                        <label for=\"text\"> Kode Mahasiswa : </label>\r\n                        <input type=\"text\" class=\"form-control\" readOnly\r\n                        name=\"kode_mahasiswa\" \r\n                        value={this.props.listmahasiswa.kode_mahasiswa} \r\n                        onChange={this.changeHandler}\r\n                         />\r\n                        </div>\r\n                    <div class =\"form-group\"> \r\n                        <label for=\"text\"> Nama Mahasiwa : </label>\r\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Type Unit Name\" \r\n                        name=\"nm_mhs\"\r\n                        value={this.props.listmahasiswa.nama_mahasiswa} \r\n                        onChange={this.changeHandler}\r\n                         />\r\n                    </div>\r\n\r\n                    <div class =\"form-group\"> \r\n                    <label for=\"text\"> Alamat : </label>\r\n                        <input type=\"text\" class=\"form-control\" placeholder=\"alamat\" \r\n                        name=\"alamat\"\r\n                        value={this.props.listmahasiswa.alamat} \r\n                        onChange={this.changeHandler}\r\n                        />\r\n                    </div>\r\n\r\n                    <label for=\"text\"> Provinsi : </label>\r\n                        <Select type=\"text\" class=\"form-control\" placeholder=\"Type address\" \r\n                        name=\"nama_provinsi\" \r\n                        value={options1.filter(({value}) => value === this.props.listmahasiswa.kode_provinsi)} \r\n                        onChange={this.handleChange1}\r\n                        options={options1}\r\n                        //onChange={this.changeHandler}\r\n                        />\r\n                   \r\n                    \r\n                    <label for=\"text\"> Kota : </label>\r\n                        <Select type=\"text\" class=\"form-control\" placeholder=\"Type address\" \r\n                        name=\"kode_kota\" \r\n                        value={options2.filter(({value}) => value === this.props.listmahasiswa.kode_kota)} \r\n                        //onChange={this.changeHandler}\r\n                        onChange={this.handleChange2}\r\n                        options={filteredOptions}\r\n                        />\r\n\r\n\r\n                    <div class =\"form-group\">\r\n                    <label for=\"text\"> Kode Agama : </label>\r\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Kode Agama\" \r\n                        name=\"kode_agama\" \r\n                        value={this.props.listmahasiswa.kode_agama} \r\n                        onChange={this.changeHandler}\r\n                        />\r\n                        </div>\r\n\r\n                    <div class =\"form-group\">\r\n                    <label for=\"text\"> Kode jurusan : </label>\r\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Kode Jurusan\" \r\n                        name=\"kode_jurusan\" \r\n                        value={this.props.listmahasiswa.kode_jurusan} \r\n                        onChange={this.changeHandler}\r\n                        />\r\n                        </div>\r\n\r\n                        <div class=\"form-group\">\r\n            <label for=\"kode jurusan\">Jenis Kelamin</label>\r\n            </div>\r\n\r\n                    <div class=\"form-group\">\r\n                        <div class=\"custom-control custom-radio custom-control-inline\">\r\n                            <input type=\"radio\" id='jenis_kelamin1' name = 'jenis_kelamin'\r\n                            value='Laki-laki'\r\n                            checked={this.props.listmahasiswa.jenis_kelamin === 'Laki-laki'}\r\n                            onChange={this.changeHandler}\r\n                            class='custom-control-input' required />\r\n                            <label class='custom-control-label' for ='jenis_kelamin1'>Laki-laki</label>\r\n                            </div>\r\n\r\n                            <div class=\"custom-control custom-radio custom-control-inline\">\r\n                            <input type=\"radio\" id='jenis_kelamin2' name = 'jenis_kelamin'\r\n                            value='Perempuan'\r\n                            checked={this.props.listmahasiswa.jenis_kelamin === 'Perempuan'}\r\n                            onChange={this.changeHandler}\r\n                            class='custom-control-input' required />\r\n                            <label class='custom-control-label' for ='jenis_kelamin2'>Perempuan</label>\r\n                            </div>\r\n                    </div>\r\n                     \r\n                    \r\n                          <div class =\"form-group\">\r\n                            <label for=\"text\"> Hobi : </label>\r\n                            \r\n                            <table>\r\n                                <tbody>\r\n                                    { this.props.productsList.map((product, i) =>{\r\n                                        return(\r\n                                            <tr key={i+1}>\r\n                                                <td>{i+1}</td>\r\n                                                <td>{product.name}</td>\r\n                                                <td>\r\n                                                    <div class=\"checkbox checkbox-circle checkbox-color-scheme\">\r\n                                                        <label class=\"checkbox-checked\">\r\n                                                            <input type=\"checkbox\" \r\n                                                                value={product.name}\r\n                                                                checked={product.isChecked}\r\n                                                                onChange={this.onAddingItem(i)}\r\n                                                            />\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </td>\r\n                                            </tr>\r\n                                        )\r\n                                    })}\r\n                                    \r\n                                </tbody>\r\n                            </table>\r\n\r\n                        </div>\r\n                   \r\n                   \r\n\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"primary\" type=\"submit\">Save</Button> \r\n                    <Button color=\"danger\" onClick={this.props.modalStatus}>Cancel</Button>\r\n                    </ModalFooter>\r\n                    \r\n                    </form>\r\n\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\nexport default Editmahasiswa"]},"metadata":{},"sourceType":"module"}