{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\BELAJAR\\\\BelajarGeh\\\\fe\\\\src\\\\component\\\\content\\\\user\\\\editUser.js\";\nimport React from 'react';\nimport { Modal, ModalBody, ModalFooter, ModalHeader, Button } from 'reactstrap';\nimport axios from 'axios';\nimport apiconfig from '../../../config/api.config.json';\n\nclass EditUser extends React.Component {\n  constructor(props) {\n    super(props);\n    let userdata = JSON.parse(localStorage.getItem(apiconfig.LS.USERDATA));\n    this.state = {\n      formdata: {\n        username: '',\n        password: '',\n        is_deleted: 'false',\n        status: 'unlocked' // update_by:userdata.username\n\n      }\n    };\n    this.submitHandler = this.submitHandler.bind(this);\n    this.changeHandler = this.changeHandler.bind(this);\n  }\n\n  componentWillReceiveProps(newProps) {\n    this.setState({\n      formdata: newProps.listuser\n    });\n  }\n\n  changeHandler(e) {\n    let tmp = this.state.formdata;\n    tmp[e.target.name] = e.target.value;\n    this.setState({\n      formdata: tmp\n    });\n  }\n\n  submitHandler() {\n    let token = localStorage.getItem(apiconfig.LS.TOKEN);\n    let option = {\n      url: apiconfig.BASE_URL + apiconfig.ENDPOINTS.USER,\n      method: 'put',\n      header: {\n        'Authorization': token,\n        'Content-Type': 'application/json'\n      },\n      data: this.state.formdata\n    };\n    axios(option).then(response => {\n      if (response.data.code === 200) {\n        alert('Success');\n        this.props.modalStatus();\n      } else {\n        alert(response.data.message);\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return React.createElement(Modal, {\n      isOpen: this.props.edit,\n      className: this.props.className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Edit User\"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      role: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Username\"), React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      name: \"username\",\n      value: this.props.listuser.username,\n      onChange: this.changeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      name: \"password\",\n      value: this.props.listuser.password,\n      onChange: this.changeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Status\"), React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      name: \"status\",\n      value: this.props.listuser.status,\n      onChange: this.changeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }))), React.createElement(ModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"primary\",\n      onClick: this.submitHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Save\"), React.createElement(Button, {\n      color: \"danger\",\n      onClick: this.props.modalStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Close\"))));\n  }\n\n}\n\nexport default EditUser;","map":{"version":3,"sources":["C:/Users/USER/Documents/BELAJAR/BelajarGeh/fe/src/component/content/user/editUser.js"],"names":["React","Modal","ModalBody","ModalFooter","ModalHeader","Button","axios","apiconfig","EditUser","Component","constructor","props","userdata","JSON","parse","localStorage","getItem","LS","USERDATA","state","formdata","username","password","is_deleted","status","submitHandler","bind","changeHandler","componentWillReceiveProps","newProps","setState","listuser","e","tmp","target","name","value","token","TOKEN","option","url","BASE_URL","ENDPOINTS","USER","method","header","data","then","response","code","alert","modalStatus","message","catch","error","console","log","render","edit","className"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Modal, ModalBody, ModalFooter, ModalHeader, Button } from 'reactstrap'\r\nimport axios from 'axios'\r\nimport apiconfig from '../../../config/api.config.json'\r\n\r\nclass EditUser extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        let userdata = JSON.parse(localStorage.getItem(apiconfig.LS.USERDATA))\r\n\r\n        this.state = {\r\n            formdata: {\r\n                username: '',\r\n                password: '',\r\n                is_deleted: 'false',\r\n                status: 'unlocked'\r\n\r\n                // update_by:userdata.username\r\n            }\r\n        }\r\n\r\n        this.submitHandler = this.submitHandler.bind(this)\r\n        this.changeHandler = this.changeHandler.bind(this)\r\n    }\r\n\r\n    componentWillReceiveProps(newProps){\r\n        this.setState({\r\n            formdata : newProps.listuser\r\n        })\r\n    }\r\n\r\n    changeHandler(e){\r\n        let tmp = this.state.formdata\r\n        tmp[e.target.name] = e.target.value\r\n        this.setState({\r\n            formdata: tmp\r\n        })\r\n    }\r\n\r\n    submitHandler(){\r\n        let token = localStorage.getItem(apiconfig.LS.TOKEN)\r\n        let option = {\r\n            url:apiconfig.BASE_URL+apiconfig.ENDPOINTS.USER, method: 'put',\r\n            header:{\r\n                'Authorization': token,\r\n                'Content-Type' : 'application/json'\r\n            },\r\n            data:this.state.formdata\r\n        }\r\n        axios(option)\r\n        .then((response) =>{\r\n            if(response.data.code === 200) {\r\n            alert('Success')\r\n            this.props.modalStatus()\r\n        } else {\r\n            alert(response.data.message)\r\n        }\r\n    })\r\n\r\n    .catch((error) => {\r\n        console.log(error)\r\n    })\r\n}\r\n\r\nrender (){\r\n    return(\r\n        <Modal isOpen = {this.props.edit} className={this.props.className}>\r\n            <ModalHeader>Edit User</ModalHeader>\r\n            <ModalBody>\r\n\r\n            <form role=\"form\">\r\n                    <div class=\"form-group\">\r\n                    <label for=\"username\">Username</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        class=\"form-control\"\r\n                        name=\"username\"\r\n                        value={this.props.listuser.username}\r\n                        onChange = {this.changeHandler}\r\n                        />\r\n                    </div>\r\n\r\n                    <div class=\"form-group\">\r\n                    <label for=\"Password\">Password</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        class=\"form-control\"\r\n                        name=\"password\"\r\n                        value={this.props.listuser.password}\r\n                        onChange = {this.changeHandler}\r\n                        />\r\n                    </div>\r\n\r\n                    <div class=\"form-group\">\r\n                    <label for=\"status\">Status</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        class=\"form-control\"\r\n                        name=\"status\"\r\n                        value={this.props.listuser.status}\r\n                        onChange = {this.changeHandler}\r\n                        />\r\n                    </div>\r\n\r\n                    </form>\r\n\r\n                <ModalFooter>\r\n                    <Button color ='primary' onClick = {this.submitHandler}>Save</Button>\r\n                    <Button color = 'danger' onClick = {this.props.modalStatus}>Close</Button>\r\n                </ModalFooter>\r\n            </ModalBody>\r\n        </Modal>\r\n\r\n    )\r\n}\r\n}\r\n\r\nexport default EditUser"]},"metadata":{},"sourceType":"module"}