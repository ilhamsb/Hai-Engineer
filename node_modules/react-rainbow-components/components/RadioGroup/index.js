"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _withReduxForm = _interopRequireDefault(require("./../../libs/hocs/withReduxForm"));

var _radioItems = _interopRequireDefault(require("./radioItems"));

var _RenderIf = _interopRequireDefault(require("../RenderIf"));

var _RequiredAsterisk = _interopRequireDefault(require("../RequiredAsterisk"));

var _utils = require("../../libs/utils");

require("./styles.css");

/**
 * A select list that can have a single entry checked at any one time.
 * @category Form
 */
var RadioGroup =
/*#__PURE__*/
function (_Component) {
  (0, _inherits2["default"])(RadioGroup, _Component);

  function RadioGroup(props) {
    var _this;

    (0, _classCallCheck2["default"])(this, RadioGroup);
    _this = (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(RadioGroup).call(this, props));
    _this.errorId = (0, _utils.uniqueId)('error-message');
    _this.groupNameId = props.name || (0, _utils.uniqueId)('options');
    return _this;
  }

  (0, _createClass2["default"])(RadioGroup, [{
    key: "getContainerClassNames",
    value: function getContainerClassNames() {
      var _this$props = this.props,
          className = _this$props.className,
          error = _this$props.error;
      return (0, _classnames["default"])('rainbow-radio-group_container', {
        'rainbow-radio-group--error': !!error
      }, className);
    }
  }, {
    key: "getErrorMessageId",
    value: function getErrorMessageId() {
      var error = this.props.error;

      if (error) {
        return this.errorId;
      }

      return undefined;
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props2 = this.props,
          style = _this$props2.style,
          label = _this$props2.label,
          required = _this$props2.required,
          error = _this$props2.error,
          onChange = _this$props2.onChange,
          options = _this$props2.options,
          value = _this$props2.value,
          id = _this$props2.id;
      return _react["default"].createElement("fieldset", {
        id: id,
        className: this.getContainerClassNames(),
        style: style
      }, _react["default"].createElement(_RenderIf["default"], {
        isTrue: !!label
      }, _react["default"].createElement("legend", {
        className: "rainbow-radio-group_label"
      }, _react["default"].createElement(_RequiredAsterisk["default"], {
        required: required
      }), label)), _react["default"].createElement("div", {
        className: "rainbow-radio-group_inner-container"
      }, _react["default"].createElement(_radioItems["default"], {
        value: value,
        onChange: onChange,
        options: options,
        name: this.groupNameId,
        required: required,
        ariaDescribedby: this.getErrorMessageId()
      })), _react["default"].createElement(_RenderIf["default"], {
        isTrue: !!error
      }, _react["default"].createElement("div", {
        id: this.getErrorMessageId(),
        className: "rainbow-radio-group_text-error"
      }, error)));
    }
  }]);
  return RadioGroup;
}(_react.Component);

RadioGroup.propTypes = {
  /** The radio group label */
  label: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].node]),

  /** The name of the radio group */
  name: _propTypes["default"].string,

  /** The value of the element. */
  value: _propTypes["default"].string,

  /** The action triggered when a value attribute changes. */
  onChange: _propTypes["default"].func,

  /** If is set to true the radio group is required. This value defaults to false. */
  required: _propTypes["default"].bool,

  /** An array with the radio options. */
  options: _propTypes["default"].arrayOf(_propTypes["default"].shape({
    label: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].node]),
    value: _propTypes["default"].string,
    disabled: _propTypes["default"].bool
  })),

  /** Specifies that an radio group must be filled out before submitting the form. */
  error: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].node]),

  /** A CSS class for the outer element, in addition to the component's base classes. */
  className: _propTypes["default"].string,

  /** An object with custom style applied for the outer element. */
  style: _propTypes["default"].object,

  /** The id of the outer element. */
  id: _propTypes["default"].string
};
RadioGroup.defaultProps = {
  label: null,
  name: null,
  className: undefined,
  style: undefined,
  value: undefined,
  onChange: function onChange() {},
  required: false,
  options: [],
  error: null,
  id: undefined
};

var _default = (0, _withReduxForm["default"])(RadioGroup);

exports["default"] = _default;