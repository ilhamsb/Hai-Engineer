"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _RenderIf = _interopRequireDefault(require("../../RenderIf"));

var _columns = require("./../helpers/columns");

var _sortArrowIcon = _interopRequireDefault(require("./sortArrowIcon"));

var _resizeBar = _interopRequireDefault(require("./resizeBar"));

var _selectableHeader = _interopRequireDefault(require("./selectableHeader"));

var Header =
/*#__PURE__*/
function (_Component) {
  (0, _inherits2["default"])(Header, _Component);

  function Header(props) {
    var _this;

    (0, _classCallCheck2["default"])(this, Header);
    _this = (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(Header).call(this, props));
    _this.handleSort = _this.handleSort.bind((0, _assertThisInitialized2["default"])(_this));
    _this.handleResize = _this.handleResize.bind((0, _assertThisInitialized2["default"])(_this));
    return _this;
  }

  (0, _createClass2["default"])(Header, [{
    key: "getClassName",
    value: function getClassName() {
      var _this$props = this.props,
          sortable = _this$props.sortable,
          isSorted = _this$props.isSorted;
      return (0, _classnames["default"])('rainbow-table_header', {
        'rainbow-table_header--resizable': this.isResizable(),
        'rainbow-table_header--sortable': sortable,
        'rainbow-table_header--sorted': isSorted
      });
    }
  }, {
    key: "getTabIndex",
    value: function getTabIndex() {
      var isSorted = this.props.isSorted;

      if (isSorted) {
        return 0;
      }

      return -1;
    }
  }, {
    key: "getHeaderContent",
    value: function getHeaderContent() {
      var content = this.props.content;

      if (typeof content === 'string') {
        return content;
      }

      return undefined;
    }
  }, {
    key: "isResizable",
    value: function isResizable() {
      var _this$props2 = this.props,
          resizeColumnDisabled = _this$props2.resizeColumnDisabled,
          width = _this$props2.width;
      return !resizeColumnDisabled && width === undefined;
    }
  }, {
    key: "handleResize",
    value: function handleResize(widthDelta) {
      var _this$props3 = this.props,
          onResize = _this$props3.onResize,
          colIndex = _this$props3.colIndex;
      onResize(widthDelta, colIndex);
    }
  }, {
    key: "handleSort",
    value: function handleSort(event) {
      var _this$props4 = this.props,
          onSort = _this$props4.onSort,
          field = _this$props4.field,
          sortable = _this$props4.sortable,
          sortDirection = _this$props4.sortDirection;

      if (sortable) {
        onSort(event, field, sortDirection);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props5 = this.props,
          content = _this$props5.content,
          sortDirection = _this$props5.sortDirection,
          minColumnWidth = _this$props5.minColumnWidth,
          maxColumnWidth = _this$props5.maxColumnWidth,
          sortable = _this$props5.sortable,
          computedWidth = _this$props5.computedWidth,
          type = _this$props5.type,
          onSelectAllRows = _this$props5.onSelectAllRows,
          onDeselectAllRows = _this$props5.onDeselectAllRows,
          tableId = _this$props5.tableId,
          maxRowSelection = _this$props5.maxRowSelection,
          bulkSelection = _this$props5.bulkSelection;
      var headerStyles = {
        width: computedWidth
      };

      if (type === _columns.SELECTABLE_CHECKBOX) {
        return _react["default"].createElement(_selectableHeader["default"], {
          onSelectAllRows: onSelectAllRows,
          onDeselectAllRows: onDeselectAllRows,
          tableId: tableId,
          maxRowSelection: maxRowSelection,
          bulkSelection: bulkSelection,
          style: headerStyles
        });
      }

      return _react["default"].createElement("th", {
        className: this.getClassName(),
        style: headerStyles,
        scope: "col",
        tabIndex: this.getTabIndex(),
        "aria-label": this.getHeaderContent()
      }, _react["default"].createElement("div", {
        className: "rainbow-table_header-wrapper",
        style: headerStyles
      }, _react["default"].createElement("div", {
        className: "rainbow-table_header-container",
        role: "presentation",
        onClick: this.handleSort
      }, _react["default"].createElement("span", {
        title: this.getHeaderContent(),
        className: "rainbow-table_header-content"
      }, content), _react["default"].createElement(_RenderIf["default"], {
        isTrue: sortable
      }, _react["default"].createElement(_sortArrowIcon["default"], {
        direction: sortDirection
      }))), _react["default"].createElement(_resizeBar["default"], {
        minColumnWidth: minColumnWidth,
        maxColumnWidth: maxColumnWidth,
        isResizable: this.isResizable(),
        ariaLabel: this.getHeaderContent(),
        onResize: this.handleResize,
        headerWidth: computedWidth
      })));
    }
  }]);
  return Header;
}(_react.Component);

exports["default"] = Header;
Header.propTypes = {
  content: _propTypes["default"].any,
  colIndex: _propTypes["default"].number.isRequired,
  isSorted: _propTypes["default"].bool,
  sortable: _propTypes["default"].bool,
  sortDirection: _propTypes["default"].string,
  onSort: _propTypes["default"].func,
  minColumnWidth: _propTypes["default"].number,
  maxColumnWidth: _propTypes["default"].number,
  onResize: _propTypes["default"].func,
  resizeColumnDisabled: _propTypes["default"].bool,
  field: _propTypes["default"].string,
  width: _propTypes["default"].number,
  computedWidth: _propTypes["default"].number,
  type: _propTypes["default"].string,
  onSelectAllRows: _propTypes["default"].func,
  onDeselectAllRows: _propTypes["default"].func,
  tableId: _propTypes["default"].string.isRequired,
  maxRowSelection: _propTypes["default"].number,
  bulkSelection: _propTypes["default"].oneOf(['none', 'some', 'all'])
};
Header.defaultProps = {
  content: null,
  isSorted: false,
  sortable: false,
  sortDirection: undefined,
  onSort: function onSort() {},
  minColumnWidth: undefined,
  maxColumnWidth: undefined,
  onResize: function onResize() {},
  resizeColumnDisabled: false,
  field: undefined,
  width: undefined,
  computedWidth: 0,
  type: undefined,
  onSelectAllRows: function onSelectAllRows() {},
  onDeselectAllRows: function onDeselectAllRows() {},
  maxRowSelection: undefined,
  bulkSelection: 'none'
};