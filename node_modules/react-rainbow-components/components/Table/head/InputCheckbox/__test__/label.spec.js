"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _react = _interopRequireDefault(require("react"));

var _enzyme = require("enzyme");

var _label = _interopRequireDefault(require("./../label"));

describe('<InputCheckboxLabel/>', function () {
  it('should set the inputId passed as the htmlFor prop in the label element', function () {
    var component = (0, _enzyme.mount)(_react["default"].createElement(_label["default"], {
      label: "Input Label",
      inputId: "input-213"
    }));
    expect(component.find('label').prop('htmlFor')).toBe('input-213');
  });
  it('should set the id passed as the id prop in the label element', function () {
    var component = (0, _enzyme.mount)(_react["default"].createElement(_label["default"], {
      label: "Input Label",
      id: "label-123"
    }));
    expect(component.find('label').prop('id')).toBe('label-123');
  });
  it('should add the right class names when disabled is passed', function () {
    var component = (0, _enzyme.mount)(_react["default"].createElement(_label["default"], {
      label: "Input Label",
      disabled: true
    }));
    expect(component.find('.rainbow-table-input-checkbox_label.rainbow-table-input-checkbox_label--disabled').exists()).toBe(true);
  });
  it('should add the right class names when hideLabel is passed', function () {
    var component = (0, _enzyme.mount)(_react["default"].createElement(_label["default"], {
      label: "Input Label",
      hideLabel: true
    }));
    expect(component.find('.rainbow-table-input-checkbox_label.rainbow-table-input-checkbox_label--hide').exists()).toBe(true);
  });
});