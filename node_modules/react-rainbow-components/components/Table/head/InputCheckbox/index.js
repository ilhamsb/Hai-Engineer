"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _utils = require("../../../../libs/utils");

var _RenderIf = _interopRequireDefault(require("../../../RenderIf"));

var _label = _interopRequireDefault(require("./label"));

require("./styles.css");

var InputCheckbox =
/*#__PURE__*/
function (_Component) {
  (0, _inherits2["default"])(InputCheckbox, _Component);

  function InputCheckbox(props) {
    var _this;

    (0, _classCallCheck2["default"])(this, InputCheckbox);
    _this = (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(InputCheckbox).call(this, props));
    _this.inputId = (0, _utils.uniqueId)('input-checkbox');
    _this.inlineTextLabelId = (0, _utils.uniqueId)('inline-text-label');
    _this.errorMessageId = (0, _utils.uniqueId)('error-message');
    _this.inputRef = _react["default"].createRef();
    return _this;
  }

  (0, _createClass2["default"])(InputCheckbox, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var indeterminate = this.props.indeterminate;
      this.inputRef.current.indeterminate = indeterminate;
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      var prevIndeterminate = prevProps.indeterminate;
      var indeterminate = this.props.indeterminate;

      if (prevIndeterminate !== indeterminate) {
        this.inputRef.current.indeterminate = indeterminate;
      }
    }
  }, {
    key: "getContainerClassNames",
    value: function getContainerClassNames() {
      var _this$props = this.props,
          className = _this$props.className,
          error = _this$props.error;
      return (0, _classnames["default"])('rainbow-table-input-checkbox_container', {
        'rainbow-table-input-checkbox--error': error
      }, className);
    }
  }, {
    key: "getInlineTextLabelId",
    value: function getInlineTextLabelId() {
      var bottomHelpText = this.props.bottomHelpText;

      if (bottomHelpText) {
        return this.inlineTextLabelId;
      }

      return undefined;
    }
  }, {
    key: "getErrorMessageId",
    value: function getErrorMessageId() {
      var error = this.props.error;

      if (error) {
        return this.errorMessageId;
      }

      return undefined;
    }
    /**
     * Sets focus on the element.
     * @public
     */

  }, {
    key: "focus",
    value: function focus() {
      this.inputRef.current.focus();
    }
    /**
     * Sets click on the element.
     * @public
     */

  }, {
    key: "click",
    value: function click() {
      this.inputRef.current.click();
    }
    /**
     * Sets blur on the element.
     * @public
     */

  }, {
    key: "blur",
    value: function blur() {
      this.inputRef.current.blur();
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props2 = this.props,
          style = _this$props2.style,
          value = _this$props2.value,
          onChange = _this$props2.onChange,
          label = _this$props2.label,
          error = _this$props2.error,
          disabled = _this$props2.disabled,
          tabIndex = _this$props2.tabIndex,
          onFocus = _this$props2.onFocus,
          onBlur = _this$props2.onBlur,
          onClick = _this$props2.onClick,
          onKeyDown = _this$props2.onKeyDown,
          bottomHelpText = _this$props2.bottomHelpText,
          id = _this$props2.id,
          name = _this$props2.name,
          checked = _this$props2.checked,
          hideLabel = _this$props2.hideLabel;
      return _react["default"].createElement("div", {
        id: id,
        className: this.getContainerClassNames(),
        style: style
      }, _react["default"].createElement("div", {
        className: "rainbow-table-input-checkbox_inner-container"
      }, _react["default"].createElement("input", {
        id: this.inputId,
        name: name,
        type: "checkbox",
        value: value,
        onChange: onChange,
        tabIndex: tabIndex,
        onFocus: onFocus,
        onBlur: onBlur,
        onClick: onClick,
        onKeyDown: onKeyDown,
        disabled: disabled,
        checked: checked,
        "aria-labelledby": this.getInlineTextLabelId(),
        "aria-describedby": this.getErrorMessageId(),
        ref: this.inputRef
      }), _react["default"].createElement(_label["default"], {
        label: label,
        hideLabel: hideLabel,
        disabled: disabled,
        inputId: this.inputId,
        id: this.getInlineTextLabelId()
      })), _react["default"].createElement(_RenderIf["default"], {
        isTrue: !!bottomHelpText
      }, _react["default"].createElement("div", {
        className: "rainbow-table-input-checkbox_help"
      }, bottomHelpText)), _react["default"].createElement(_RenderIf["default"], {
        isTrue: !!error
      }, _react["default"].createElement("div", {
        id: this.getErrorMessageId(),
        className: "rainbow-table-input-checkbox_error-message"
      }, error)));
    }
  }]);
  return InputCheckbox;
}(_react.Component);

exports["default"] = InputCheckbox;
InputCheckbox.propTypes = {
  value: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].bool]),
  label: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].node]).isRequired,
  name: _propTypes["default"].string,
  bottomHelpText: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].node]),
  error: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].node]),
  disabled: _propTypes["default"].bool,
  onChange: _propTypes["default"].func,
  tabIndex: _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].string]),
  onClick: _propTypes["default"].func,
  onFocus: _propTypes["default"].func,
  onBlur: _propTypes["default"].func,
  onKeyDown: _propTypes["default"].func,
  checked: _propTypes["default"].bool,
  hideLabel: _propTypes["default"].bool,
  indeterminate: _propTypes["default"].bool,
  className: _propTypes["default"].string,
  style: _propTypes["default"].object,
  id: _propTypes["default"].string
};
InputCheckbox.defaultProps = {
  value: undefined,
  name: undefined,
  bottomHelpText: null,
  error: null,
  disabled: false,
  onChange: function onChange() {},
  tabIndex: undefined,
  onClick: function onClick() {},
  onFocus: function onFocus() {},
  onBlur: function onBlur() {},
  onKeyDown: function onKeyDown() {},
  checked: undefined,
  hideLabel: false,
  indeterminate: undefined,
  className: undefined,
  style: undefined,
  id: undefined
};