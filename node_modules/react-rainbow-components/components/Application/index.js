"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = Application;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

require("./styles/rainbow-styles.css");

var _context = require("./context");

/**
 * This component is used to setup the React Rainbow context for a tree.
 * Usually, this component will wrap an app's root component so that the entire
 * app will be within the configured context.
 * @category Layout
 */
function Application(props) {
  var children = props.children,
      className = props.className,
      style = props.style,
      locale = props.locale;
  var contextValue = {
    locale: locale
  };
  return _react["default"].createElement(_context.Provider, {
    value: contextValue
  }, _react["default"].createElement("div", {
    className: className,
    style: style
  }, children));
}

Application.propTypes = {
  /**
   * This prop should not be visible in the documentation.
   * @ignore
   */
  children: _propTypes["default"].oneOfType([_propTypes["default"].arrayOf(_propTypes["default"].node), _propTypes["default"].object]),

  /** A CSS class for the outer element, in addition to the component's base classes. */
  className: _propTypes["default"].string,

  /** An object with custom style applied to the outer element. */
  style: _propTypes["default"].object,

  /** The locale used by application. Defaults to browser's locale. */
  locale: _propTypes["default"].string
};
Application.defaultProps = {
  children: [],
  className: undefined,
  style: undefined,
  locale: undefined
};